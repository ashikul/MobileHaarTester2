apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'

android {
    compileSdkVersion 19
    buildToolsVersion "21.1.2"



    defaultConfig {
        applicationId "org.opencv.samples.facedetect"
        minSdkVersion 8
        targetSdkVersion 19
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "MyLib"
        }

    }
    // begin
//    sourceSets.main {
//        jni.srcDirs = [] //disable automatic ndk-build call
//        jniLibs.srcDir 'src/main/libs'
//    }

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDir file('jniLibs')
    //        jniLibs.srcDirs = ['libs']
        }
    }

    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
        commandLine 'cmd', "C\\:\\\\Users\\\\Ashikul\\\\Downloads\\\\android-ndk-r10d\\\\ndk-build",
//         commandLine "C:\\Users\\Ashikul\\Downloads\\android-ndk-r10d\\ndk-build",
//            commandLine ndk.dir, '-C', file('src/main/jni').absolutePath,
//        def ndkBuildPath = project.plugins.findPlugin('com.android.application').getNdkFolder().absolutePath + File.separator
//        if (Os.isFamily(Os.FAMILY_WINDOWS)) {
//            ndkBuildPath += 'ndk-build.cmd'
//        } else {
//            ndkBuildPath += 'ndk-build'
//        }
//        commandLine ndkBuildPath, '-C', file('src/main').absolutePath,
                'NDK_PROJECT_PATH=build/intermediates/ndk',
                'NDK_LIBS_OUT=src/main/jniLibs',
                'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                'NDK_APPLICATION_MK=src/main/jni/Application.mk'
    }
//    task ndkBuild(type: Exec, description: 'Compile JNI source via NDK') {
//        ndkDir = project.plugins.findPlugin('com.android.application').getNdkFolder()
//        commandLine 'cmd',"$ndkDir\\ndk-build",
//                'NDK_PROJECT_PATH=build/intermediates/ndk',
//                'NDK_LIBS_OUT=src/main/jniLibs',
//                'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
//                'NDK_APPLICATION_MK=src/main/jni/Application.mk'
//    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
    // add end


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
    }
}

dependencies {
    //compile project(':openCVLibrary2410')
    //added for error
    //compile fileTree(dir: new File(buildDir, 'libs'), include: '*.jar')
    //compile project(':libraries:opencv')


    compile fileTree(dir: 'libs', include: ['*.jar'])
   // compile fileTree(dir: new File(buildDir, 'libs'), include: '*.jar')
    compile project(':opencv-java')
}
